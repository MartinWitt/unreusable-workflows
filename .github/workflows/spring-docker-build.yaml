name: Docker
on:
  workflow_call:
    inputs:
      node-version:
        description: 'Version of Node.js'
        required: true
        type: string
        default: '18.4'
      java-version:
        description: 'Version of Java JDK'
        required: true
        type: string
        default: "21"
      distribution:
        description: 'Distribution of Java JDK'
        required: true
        type: string
        default: "oracle"
      github-token:
        description: 'GitHub token'
        required: true
        type: string
      image-name:
        description: 'Name of the Docker image like ghcr.io/martinwitt/logmanager'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@cc4fc85e6b35bafd578d5ffbc76a5518407e1af0 # v4
        with:
          gradle-version: release-candidate
      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: {{ inputs.node-version }}
      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
        with:
          distribution: {{ inputs.distribution }}
          java-version: {{ inputs.java-version }}
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@0f069ddc17b8eb78586b08a7fe335fd54649e2d3
      - name: Build and push
        if: github.event_name != 'pull_request'
        run: gradle bootBuildImage --publishImage --imageName={{inputs.image-name}} -PUSER_NAME=${{ github.actor }} -PGITHUB_TOKEN=${{ inputs.github-token }}
      - name: Build and no push
        if: github.event_name == 'pull_request'
        run: gradle bootBuildImage
