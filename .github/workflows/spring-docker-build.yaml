name: Docker
on:
  workflow_call:
    inputs:
      node-version:
        description: 'Version of Node.js'
        required: true
        type: string
        default: '18.4'
      java-version:
        description: 'Version of Java JDK'
        required: true
        type: string
        default: "21"
      distribution:
        description: 'Distribution of Java JDK'
        required: true
        type: string
        default: "oracle"
      github-token:
        description: 'GitHub token'
        required: true
        type: string
      image-name:
        description: 'Name of the Docker image like ghcr.io/martinwitt/logmanager'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3
        with:
          gradle-version: release-candidate
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: {{ inputs.node-version }}
      - uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4
        with:
          distribution: {{ inputs.distribution }}
          java-version: {{ inputs.java-version }}
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@edfb0fe6204400c56fbfd3feba3fe9ad1adfa345
      - name: Build and push
        if: github.event_name != 'pull_request'
        run: gradle bootBuildImage --publishImage --imageName={{inputs.image-name}} -PUSER_NAME=${{ github.actor }} -PGITHUB_TOKEN=${{ inputs.github-token }}
      - name: Build and no push
        if: github.event_name == 'pull_request'
        run: gradle bootBuildImage
